{"version":3,"file":"static/js/489.6130130e.chunk.js","mappings":"iOA2DA,UArDe,WAAO,IAAD,EACnB,GAAkDA,EAAAA,EAAAA,UAAS,IAA3D,eAAOC,EAAP,KAA0BC,EAA1B,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,OAIjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,0FACdL,EADc,0CAKSM,EAAAA,EAAAA,IAAA,0DAA6DN,EAA7D,wFALT,OAKRO,EALQ,OAQRZ,EAAoBY,EAASC,KAAKC,QACxCb,EAAqBD,GATP,sDAYde,QAAQC,MAAM,uJAAd,MAZc,8DAAH,qDAkBhBN,GACA,GAAE,CAACL,IAUN,OACE,6BACE,kBAAMY,SAVW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAcF,EAAEG,OAAOC,SAASjB,MAAMkB,MAAMC,OAClD,GAAoB,KAAhBJ,EAAsB,OAAOhB,EAAgB,CAAC,GAClDA,EAAgB,CAAEC,MAAOe,IACxBF,EAAEG,OAAOI,OACX,EAIG,WACE,kBAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,wBAED,wBACE1B,EAAkB4B,KAAI,SAAAC,GACvB,OAAO,yBAAmB,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAM1B,GAAxC,SAAqDsB,EAAMK,SAArEL,EAAME,GACrB,QAIR,C","sources":["components/pages/Movies.js"],"sourcesContent":["\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\n\n\nconst Movies = () => {\n  const [searchMoviesArray, setSearchMoviesArray] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\") ?? \"\";\n  const location = useLocation();\n  // console.log(location);\n  \n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (query) {\n\n        try {\n   \n          const response = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=18e447cd4ab696665fa7fbc918675bb1`);\n\n          // console.log(response.data.results);\n          const searchMoviesArray = response.data.results;\n          setSearchMoviesArray(searchMoviesArray);\n\n        } catch (error) {\n          console.error(\"Помилка при отриманні даних:\", error);\n          throw error;\n        }\n      }\n     \n    }\n     fetchMovies();\n    }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchQuery = e.target.elements.query.value.trim();\n    if (searchQuery === \"\") { return setSearchParams({}); }\n    setSearchParams({ query: searchQuery });\n     e.target.reset();\n  };\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </form>\n       <ul>\n        {searchMoviesArray.map(movie => {\n        return <li key={movie.id}><Link to={`${movie.id}`} state={{ from: location }}>{movie.title}</Link></li> \n        })}\n      </ul>\n    </main>\n  )\n}\n\nexport default Movies;\n\n\n"],"names":["useState","searchMoviesArray","setSearchMoviesArray","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","fetchMovies","axios","response","data","results","console","error","onSubmit","e","preventDefault","searchQuery","target","elements","value","trim","reset","type","name","map","movie","to","id","state","from","title"],"sourceRoot":""}